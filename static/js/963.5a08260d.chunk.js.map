{"version":3,"file":"static/js/963.5a08260d.chunk.js","mappings":"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","sources":["fetchApi/fetch.jsx","components/ProductsList.jsx","components/Pagination.jsx","components/Filter.jsx","pages/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://reqres.in/api/products\";\n\nexport const getFetch = async (page) => {\n  const result = await axios.get(`?per_page=5&page=${page}`);\n  return result.data;\n};\n\nexport const getProduct = async (productId) => {\n  const result = await axios.get(`/${productId}`);\n  return result.data;\n};\n","import Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport { NavLink } from \"react-router-dom\";\n\nconst ProductsList = ({ data, currentPage }) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        paddingBottom: \"30px\",\n      }}\n    >\n      {data.map(({ id, name, color, year }) => {\n        return (\n          <NavLink key={id} to={`/${currentPage}/card/${id}`}>\n            <Card style={{ width: \"250px\", height: \"230px\" }}>\n              <CardActionArea>\n                <CardMedia\n                  component=\"img\"\n                  height=\"140\"\n                  style={{ backgroundColor: `${color}` }}\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"div\">\n                    Name: {name}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Year: {year}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ProductsList;\n","import Pagination from \"@mui/material/Pagination\";\nimport Stack from \"@mui/material/Stack\";\n\nconst BasicPagination = ({ currentPage, totalPage, handlePages }) => {\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <Stack spacing={2}>\n        <Pagination\n          defaultPage={1}\n          count={totalPage}\n          page={currentPage}\n          onChange={handlePages}\n        />\n      </Stack>\n    </div>\n  );\n};\n\nexport default BasicPagination;\n","import { NavLink } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\n\nconst Filter = ({ query, handleFilter, currentPage }) => {\n  return (\n    <form\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"30px\",\n      }}\n    >\n      <TextField\n        size=\"small\"\n        label=\"ID\"\n        type=\"number\"\n        value={query}\n        name=\"search\"\n        onChange={handleFilter}\n        placeholder=\"write id\"\n      />\n      <NavLink\n        to={`/${currentPage}/card/${query}`}\n        style={{ textDecoration: \"none\" }}\n      >\n        <Button type=\"button\" variant=\"outlined\" size=\"large\">\n          Submit\n        </Button>\n      </NavLink>\n    </form>\n  );\n};\n\nexport default Filter;\n","import { useEffect, useState } from \"react\";\nimport { Outlet, NavLink, useParams } from \"react-router-dom\";\nimport { getFetch } from \"../fetchApi/fetch\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\nimport ProductsList from \"../components/ProductsList\";\nimport BasicPagination from \"../components/Pagination\";\nimport Filter from \"../components/Filter\";\n\nconst Home = () => {\n  const [cards, setCards] = useState([]);\n  const [totalPage, setTotalPage] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [queryId, setQueryId] = useState(\"\");\n  const { pageNum } = useParams();\n  const pageNumtoNumber = Number(pageNum);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const { data, page, total_pages } = await getFetch(currentPage);\n        setCards([...data]);\n        setTotalPage(total_pages);\n        if (pageNumtoNumber > total_pages) {\n          return Notify.failure(\"Have not that page\");\n        }\n        setCurrentPage(page);\n      } catch (error) {\n        Notify.failure(\"No such params\");\n      }\n    };\n    fetchProducts();\n  }, [currentPage, pageNumtoNumber]);\n\n  const handlePages = (e, p) => {\n    setCurrentPage(p);\n  };\n\n  const handleFilter = (e) => {\n    setQueryId(e.target.value);\n  };\n\n  if (!totalPage) {\n    return null;\n  }\n\n  return (\n    <main>\n      <div>\n        <Filter\n          query={queryId}\n          handleFilter={handleFilter}\n          currentPage={currentPage}\n        />\n      </div>\n      <ProductsList data={cards} currentPage={currentPage} />\n      <NavLink to={`/${currentPage}`}>\n        <BasicPagination\n          defaultPage={1}\n          totalPage={totalPage}\n          currentPage={currentPage}\n          handlePages={handlePages}\n        />\n      </NavLink>\n      <Outlet />\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["axios","getFetch","page","result","data","getProduct","productId","currentPage","style","display","justifyContent","paddingBottom","map","id","name","color","year","to","Card","width","height","CardActionArea","CardMedia","component","backgroundColor","CardContent","Typography","gutterBottom","variant","totalPage","handlePages","Stack","spacing","Pagination","defaultPage","count","onChange","query","handleFilter","padding","TextField","size","label","type","value","placeholder","textDecoration","Button","useState","cards","setCards","setTotalPage","setCurrentPage","queryId","setQueryId","pageNum","useParams","pageNumtoNumber","Number","useEffect","fetchProducts","total_pages","Notify","e","target","p"],"sourceRoot":""}